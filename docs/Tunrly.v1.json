{
  "openapi": "3.0.0",
  "info": {
    "title": "Tunrly",
    "description": "REST API for Tunrly.com",
    "termsOfService": "https://tunrly.com/tac",
    "contact": {
      "name": "Oscar Rey Castro",
      "url": "https://tunrly.com",
      "email": "dj@tunrly.com"
    },
    "license": {
      "name": "Â©Oscar R.C. 2020",
      "url": "https://tunrly.com/tac"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/v1",
      "description": "Dev"
    },
    {
      "url": "https://dev.tunrly.com/v1",
      "description": "Beta"
    },
    {
      "url": "https://api.tunrly.com/v1",
      "description": "Production"
    }
  ],
  "paths": {
    "/album": {
      "get": {
        "tags": [],
        "summary": "Get many albums",
        "description": "Gets many albums by id",
        "operationId": "album.getMany",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Comma separated list of album Ids",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Album"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/album/{name}/{artist}": {
      "get": {
        "tags": [],
        "summary": "Get album",
        "description": "Gets album info",
        "operationId": "album.get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Album title",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artist",
            "in": "path",
            "description": "Artist name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Album"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/artist/top": {
      "get": {
        "tags": [],
        "summary": "Get top artists",
        "description": "Gets top artists for the week",
        "operationId": "artist.getTop",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "description": "Country to get top artists for",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": true
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch. Defaults to 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per page. Defaults to 10",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Artist"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/artist": {
      "get": {
        "tags": [],
        "summary": "Get many artists",
        "description": "Gets many artists by id",
        "operationId": "artist.getMany",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Comma separated list of album Ids",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Artist"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/artist/{name}": {
      "get": {
        "tags": [],
        "summary": "Get artist",
        "description": "Gets artist info",
        "operationId": "artist.get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Artist name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artist"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/artist/{id}/similar": {
      "get": {
        "tags": [],
        "summary": "Get similar artists",
        "description": "Gets similar artists for the given one",
        "operationId": "artist.getSimilarar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Artist Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch. Defaults to 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per page. Defaults to 10",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Artist"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/artist/{id}/albums": {
      "get": {
        "tags": [],
        "summary": "Get artist albums",
        "description": "Gets albums for the given artist",
        "operationId": "artist.getAlbums",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Artist Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch. Defaults to 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per page. Defaults to 10",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Album"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/artist/{id}/tracks": {
      "get": {
        "tags": [],
        "summary": "Get artist tracks",
        "description": "Gets tracks for the given artist",
        "operationId": "artist.getTracks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Artist Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch. Defaults to 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per page. Defaults to 10",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/auth": {
      "post": {
        "summary": "Login",
        "description": "Logs an user in and creates a session.",
        "operationId": "auth.login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "device",
                  "password",
                  "user"
                ],
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "description": "Username or email"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  },
                  "device": {
                    "type": "string",
                    "description": "Fingerprint of the device used"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "session",
                    "token",
                    "user"
                  ],
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    },
                    "session": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Logout",
        "description": "Logs an user out and deletes the given session",
        "operationId": "auth.logout",
        "parameters": [
          {
            "name": "device",
            "in": "query",
            "description": "Device to delete session for. If not provided deletes all user sessions",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "summary": "Refresh",
        "description": "Gets a new JWT token for the user in exchange for a valid session token",
        "operationId": "auth.refresh",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "device",
                  "token",
                  "user"
                ],
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "description": "ID of the user"
                  },
                  "device": {
                    "type": "string",
                    "description": "Fingerprint of the device used"
                  },
                  "token": {
                    "type": "string",
                    "description": "Session token aquired on the login step"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "session",
                    "token",
                    "user"
                  ],
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    },
                    "session": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/playlist": {
      "get": {
        "tags": [],
        "summary": "Get public playlist",
        "description": "Gets public playlists for an user or a given list of Ids.",
        "operationId": "playlist.getPublic",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Comma separated list of playlist Ids",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "allowReserved": true
          },
          {
            "name": "user",
            "in": "query",
            "description": "Id of the user to get public playlists for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch. Defaults to 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per page. Defaults to 10",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Playlist"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "summary": "Create playlist",
        "description": "Creates a new playlist",
        "operationId": "playlist.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "description",
                  "name",
                  "public"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "public": {
                    "type": "boolean"
                  },
                  "tracks": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/playlist/{id}": {
      "get": {
        "tags": [],
        "summary": "Get user playlist",
        "description": "Gets a playlist belonging to the current user",
        "operationId": "playlist.get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Playlist Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "summary": "Update user playlists",
        "description": "Gets a playlist belonging to the current user",
        "operationId": "playlist.update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Playlist Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "description",
                  "name",
                  "public"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "public": {
                    "type": "boolean"
                  },
                  "tracks": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "summary": "Delete user playlist",
        "description": "Deletes a playlist belonging to the current user",
        "operationId": "playlist.delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Playlist Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/playlist/add": {
      "patch": {
        "summary": "Add track to playlist",
        "description": "Adds a track to the given playlist",
        "operationId": "playlist.addToPlaylist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "id",
                  "track"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Id of the playlist to update"
                  },
                  "track": {
                    "type": "string",
                    "description": "Id of the track to add"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/playlist/remove": {
      "patch": {
        "summary": "Remove track from playlist",
        "description": "Removes a track from the given playlist",
        "operationId": "playlist.removeFromPlaylist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "id",
                  "track"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Id of the playlist to update"
                  },
                  "track": {
                    "type": "string",
                    "description": "Id of the track to remove"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/search": {
      "get": {
        "tags": [],
        "summary": "Search",
        "description": "Performs a search for the given query on the given entity group if provided",
        "operationId": "search.search",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Entity type to search",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "albums",
                "artists",
                "tracks",
                "playlists"
              ]
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch. Defaults to 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page. Defaults to 10",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Search"
                    },
                    {
                      "required": [
                        "albums",
                        "artists",
                        "playlists",
                        "tracks"
                      ],
                      "type": "object",
                      "properties": {
                        "albums": {
                          "$ref": "#/components/schemas/Search"
                        },
                        "artists": {
                          "$ref": "#/components/schemas/Search"
                        },
                        "tracks": {
                          "$ref": "#/components/schemas/Search"
                        },
                        "playlists": {
                          "$ref": "#/components/schemas/Search"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/tag": {
      "get": {
        "tags": [],
        "summary": "Get tags",
        "description": "Gets a list of popular tags",
        "operationId": "tag.getTags",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch. Defaults to 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per page. Defaults to 10",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "name"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/tag/{tag}": {
      "get": {
        "tags": [],
        "summary": "Get entities by tag",
        "description": "Getas popular entities by tag",
        "operationId": "tag.getByTag",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "description": "Name of the tag to fetch results for",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Entity type to fetch",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "albums",
                "artists",
                "tracks",
                "playlists"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch. Defaults to 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per page. Defaults to 10",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Album"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Artist"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Track"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Playlist"
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "albums": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Album"
                          }
                        },
                        "artists": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Artist"
                          }
                        },
                        "tracks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Track"
                          }
                        },
                        "playlists": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Playlist"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/track/top": {
      "get": {
        "tags": [],
        "summary": "Get top tracks",
        "description": "Gets top tracks for the week",
        "operationId": "track.getTop",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "description": "Country to fetch top tracks for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": true
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch. Defaults to 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per page. Defaults to 10",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/track": {
      "get": {
        "tags": [],
        "summary": "Get many tracks",
        "description": "Gets many tracks by id",
        "operationId": "track.getMany",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Comma separated list of track ids",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/track/{name}/{artist}": {
      "get": {
        "tags": [],
        "summary": "Get track",
        "description": "Gets track info",
        "operationId": "track.get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artist",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Track"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/track/{id}/similar": {
      "get": {
        "tags": [],
        "summary": "Get similar tracks",
        "description": "Gets similar tracks for the given one",
        "operationId": "track.getSimilar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch. Defaults to 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per page. Defaults to 10.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/track/{id}/source": {
      "get": {
        "tags": [],
        "summary": "Get source",
        "description": "Gets video source for the given track",
        "operationId": "track.getSource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Track"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/validation": {
      "post": {
        "summary": "Create validation request",
        "description": "Creates a validation request",
        "operationId": "validation.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "action",
                  "email"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "pattern": "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$",
                    "type": "string",
                    "description": "Email of the user to create validation request for"
                  },
                  "action": {
                    "type": "integer",
                    "description": "Validation action to perform",
                    "enum": [
                      0,
                      1
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Perform a validation",
        "description": "Performs a validation this is an account validation or password reset.",
        "operationId": "validation.validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "action",
                  "token"
                ],
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Validation token"
                  },
                  "action": {
                    "type": "integer",
                    "description": "Validation action"
                  },
                  "password": {
                    "type": "string",
                    "description": "New user password, if action equals 1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/check": {
      "get": {
        "tags": [],
        "summary": "Check availability",
        "description": "Checks if username or email is available",
        "operationId": "user.check",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "description": "Username or email to check",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/recommendations": {
      "get": {
        "tags": [],
        "summary": "Get recommendations",
        "description": "Gets recommended tracks for the current user",
        "operationId": "user.getRecommended",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "summary": "Get user",
        "description": "Gets current user",
        "operationId": "user.get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "summary": "Upadate user",
        "description": "Updates current user",
        "operationId": "user.update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "pattern": "^([a-z0-9]+(?:[ _.-][a-z0-9]+)*){5,15}",
                    "type": "string"
                  },
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "language": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "settings": {
                    "type": "object",
                    "properties": {
                      "publicProfile": {
                        "type": "boolean"
                      },
                      "publicFavorites": {
                        "type": "boolean"
                      },
                      "dark": {
                        "type": "boolean"
                      },
                      "volume": {
                        "maximum": 4,
                        "minimum": 0,
                        "type": "number"
                      },
                      "quality": {
                        "maximum": 4,
                        "minimum": 0,
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "summary": "Create user",
        "description": "Creates a new user",
        "operationId": "user.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "firstname",
                  "language",
                  "lastname",
                  "password",
                  "username"
                ],
                "type": "object",
                "properties": {
                  "username": {
                    "pattern": "^([a-z0-9]+(?:[ _.-][a-z0-9]+)*){5,15}",
                    "type": "string"
                  },
                  "email": {
                    "pattern": "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$",
                    "type": "string"
                  },
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "password": {
                    "pattern": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15}$",
                    "type": "string"
                  },
                  "language": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [],
        "summary": "Get public user",
        "description": "Gets public profile for the given username",
        "operationId": "user.getPublic",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "User to fetch public profile",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/profile/password": {
      "patch": {
        "summary": "Update password",
        "description": "Updates current user password",
        "operationId": "user.updatePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "newPassword",
                  "oldPassword"
                ],
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "description": "User's current password"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "User's new password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/profile/favorites": {
      "patch": {
        "tags": [],
        "summary": "Adds a favorite",
        "description": "Adds a new favorite to user favorites",
        "operationId": "user.setFavorite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "favId",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "favId": {
                    "type": "string",
                    "description": "Id of the entity to add"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the entity to add",
                    "enum": [
                      "artist",
                      "album",
                      "track",
                      "playlist"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/profile/history": {
      "patch": {
        "summary": "Add to history",
        "description": "Adds a track to user's played history",
        "operationId": "user.addToHistory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "track"
                ],
                "type": "object",
                "properties": {
                  "track": {
                    "type": "string",
                    "description": "Id of the track to add"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "required": [
          "email",
          "firstname",
          "language",
          "lastname",
          "role",
          "status",
          "username"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "pattern": "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$",
            "type": "string"
          },
          "username": {
            "pattern": "^([a-z0-9]+(?:[ _.-][a-z0-9]+)*){5,15}",
            "type": "string"
          },
          "password": {
            "pattern": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15}$",
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "base",
              "premium",
              "admin"
            ]
          },
          "country": {
            "type": "string"
          },
          "language": {
            "type": "string",
            "enum": [
              "en",
              "es"
            ]
          },
          "image": {
            "type": "string"
          },
          "status": {
            "maximum": 3,
            "minimum": 0,
            "type": "number"
          },
          "playlists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "favorite": {
            "type": "object",
            "properties": {
              "track": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "album": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "artist": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "playlist": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "settings": {
            "required": [
              "dark",
              "publicFavorites",
              "quality",
              "volume"
            ],
            "type": "object",
            "properties": {
              "publicProfile": {
                "type": "boolean"
              },
              "publicFavorites": {
                "type": "boolean"
              },
              "dark": {
                "type": "boolean"
              },
              "volume": {
                "maximum": 4,
                "minimum": 0,
                "type": "number"
              },
              "quality": {
                "maximum": 4,
                "minimum": 0,
                "type": "number"
              }
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Validation": {
        "title": "Validation",
        "required": [
          "_id",
          "action",
          "token",
          "user"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "type": "string"
          },
          "action": {
            "type": "integer",
            "enum": [
              0,
              1
            ]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "": {
            "type": "string"
          }
        }
      },
      "Track": {
        "title": "Track",
        "required": [
          "_id",
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mbid": {
            "type": "string"
          },
          "image": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "duration": {
            "type": "number"
          },
          "url": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "album": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "artist": {
                "type": "string"
              },
              "image": {
                "type": "string"
              }
            }
          },
          "similar": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "source": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "": {
            "type": "object",
            "properties": {
              "published": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "content": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Session": {
        "title": "Session",
        "required": [
          "_id",
          "device",
          "token",
          "user"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "device": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Playlist": {
        "title": "Playlist",
        "required": [
          "_id",
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Track"
            }
          },
          "public": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Album": {
        "title": "Album",
        "required": [
          "_id",
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mbid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Track"
            }
          },
          "image": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "wiki": {
            "type": "object",
            "properties": {
              "published": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "content": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Artist": {
        "title": "Artist",
        "required": [
          "_id",
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mbid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "similar": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "image": {
            "type": "object",
            "properties": {
              "background": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "thumbnail": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "logo": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "albums": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tracks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "wiki": {
            "type": "object",
            "properties": {
              "published": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "content": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Error": {
        "title": "Error",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Search": {
        "title": "Search",
        "type": "object",
        "properties": {
          "results": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string"
              },
              "total": {
                "type": "number"
              },
              "page": {
                "type": "number"
              },
              "itemsPerPage": {
                "type": "number"
              }
            }
          },
          "matches": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Track"
                },
                {
                  "$ref": "#/components/schemas/Playlist"
                },
                {
                  "$ref": "#/components/schemas/Album"
                },
                {
                  "$ref": "#/components/schemas/Artist"
                }
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}